# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Build
      run: npm run build
      
    - name: Test CLI
      run: |
        node dist/cli.js --version
        node dist/cli.js --help

  build-binaries:
    needs: test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
          - os: macos-latest
            target: mac
          - os: windows-latest
            target: win
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Package binary
      run: npm run package:${{ matrix.target }}
      
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: llamafarm-${{ matrix.target }}
        path: binaries/llamafarm*

  publish:
    needs: [test, build-binaries]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          llamafarm-linux/llamafarm-linux
          llamafarm-mac/llamafarm-mac
          llamafarm-win/llamafarm.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}